<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <!--
        Complain loudly if @Required annotated attributes are not honoured in
        the configuration
    -->
    <bean
        class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />
    <bean
        class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />

    <!-- Bring in Core Services configuration -->
    <import resource="classpath:fatfree-core.xml" />

    <!-- Bring in Servlet configuration -->
    <import resource="classpath:fatfree-servlet.xml" />

    <!--  Render Manager configuration -->
    <bean id="renderManager" class="com.icesoft.faces.async.render.RenderManager"
        scope="singleton" />

    <!--
        Bring in the Security configuration <import
        resource="classpath:fatfree-security.xml"/> <import
        resource="classpath:fatfree-aop.xml"/>
    -->
    <!--
        Configure the remotely available services <import
        resource="classpath:timesheet-remote.xml"/>
    -->
    <!--
        DAO configurations <bean id="securityDao"
        class="com.apress.timesheets.dao.hibernate.HibernateSecurityDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" /> <property
        name="userAccountDao" ref="userAccountDao" /> <property
        name="passwordEncoder" ref="passwordEncoder" /> </bean> <bean
        id="userAccountDao"
        class="com.apress.timesheets.dao.hibernate.HibernateUserAccountDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" /> </bean> <bean
        id="timesheetDao"
        class="com.apress.timesheets.dao.hibernate.HibernateTimesheetDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" /> </bean>
    -->
    <!--
        <bean id="acegiUserDetailsService"
        class="com.apress.timesheets.security.AcegiUserDetailsService">
        <property name="securityDao" ref="securityDao" /> </bean> <bean
        id="userAccountService"
        class="com.apress.timesheets.service.UserAccountServiceImpl"> <property
        name="userAccountDao" ref="userAccountDao" /> <property
        name="securityDao" ref="securityDao" /> </bean> <bean
        id="timesheetService"
        class="com.apress.timesheets.service.TimesheetServiceImpl"> <property
        name="timesheetDao" ref="timesheetDao" /> <property name="emailDao"
        ref="velocityImageEmailDao" /> </bean>
    -->
    <!--
        Transaction configuration <bean id="txManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" /> </bean>

        <tx:annotation-driven transaction-manager="txManager" />
    -->
    <!--
        <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes> <tx:method name="" isolation="DEFAULT"
        no-rollback-for="" propagation="REQUIRED" timeout="-1" read-only="false"
        rollback-for="" /> <tx:method name="get*" read-only="true" /> <tx:method
        name="load*"/> <tx:method name="find*"/> <tx:method name="list*"/>
        <tx:method name="create*"/> <tx:method name="delete*"/> <tx:method
        name="update*"/> </tx:attributes> </tx:advice> <aop:config>
        <aop:pointcut id="timesheetServiceOperations" expression="execution(*
        com.apress.timesheets.service.*Service*.*(..))"/> <aop:advisor
        advice-ref="txAdvice" pointcut-ref="timesheetServiceOperations"/>
        </aop:config>
    -->
    <!--
        Helper bean to auto-populate the empty database <bean
        class="com.apress.timesheets.util.PopulateDataProcessor"> <property
        name="securityDao" ref="securityDao" /> <property name="timesheetDao"
        ref="timesheetDao" /> </bean>
    -->
    <!--
        Email config <bean id="mailSender"
        class="org.springframework.mail.javamail.JavaMailSenderImpl"> <property
        name="host" value="smtp.blueyonder.co.uk" /> </bean> <bean
        id="velocityEngine"
        class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties"> <value> resource.loader=class
        class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
        </value> </property> </bean> <bean id="abstractEmailDao"
        abstract="true"> <property name="fromAddress"
        value="timesheets@example.com" /> <property name="rcptAddress"
        value="dave@paperstack.com" /> <property name="mailSender"
        ref="mailSender" /> <property name="subject" value="Timesheet Update
        Message" /> </bean> <bean id="simpleEmailDao"
        class="com.apress.timesheets.mail.SimpleMailDaoImpl"
        parent="abstractEmailDao" /> <bean id="velocityEmailDao"
        class="com.apress.timesheets.mail.VelocityMailDaoImpl"
        parent="abstractEmailDao"> <property name="velocityEngine"
        ref="velocityEngine" /> <property name="velocityMacroPath"
        value="velocity/timesheet/update.vm" /> </bean> <bean
        id="velocityImageEmailDao"
        class="com.apress.timesheets.mail.VelocityImageMailDaoImpl"
        parent="abstractEmailDao"> <property name="velocityEngine"
        ref="velocityEngine" /> <property name="velocityMacroPath"
        value="velocity/timesheet/attachments.vm" /> <property name="attachment"
        value="classpath:strawberry.jpg" /> <property name="image"
        value="classpath:strawberry.jpg" /> </bean>
    -->
</beans>
